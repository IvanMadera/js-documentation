(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{474:function(a,e,s){"use strict";s.r(e);var t=s(83),r=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"declaring-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#declaring-variables"}},[a._v("#")]),a._v(" Declaring variables")]),a._v(" "),s("p",[a._v("You can declare a variable in three ways:\nWith the keyword var. For example,")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("42.")]),a._v("\n")])])]),s("p",[a._v("This syntax can be used to declare both local and global variables.")]),a._v(" "),s("p",[a._v("By simply assigning it a value. For example,")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("42.")]),a._v("\n")])])]),s("p",[a._v("This always declares a global variable. It generates a strict JavaScript warning. You shouldn't use this variant.")]),a._v(" "),s("p",[a._v("With the keyword let. For example,")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("13.")]),a._v("\n")])])]),s("p",[a._v("This syntax can be used to declare a block scope local variable. See Variable scope below.")])])}),[],!1,null,null,null);e.default=r.exports}}]);